image: python:3.9

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  - key: PIP
    paths:
      - .cache/pip
  - key: "$CI_COMMIT_SHA"
    paths:
      - whl

before_script:
  - python -V  # Print out python version for debugging

stages:
  - test
  - build
  - push

test-staging:
  stage: test
  tags:
    - Docker-2
  script:
    - pip install hatch
    - hatch run test:run-coverage
  artifacts:
    name: 'test-results'
    when: always
    reports:
      junit: build/report.xml
      coverage_report:
        coverage_format: cobertura
        path: build/coverage.xml

build-staging:
  stage: build
  tags:
    - Docker-2
  script:
    - pip install build
    - python -m build
    - mkdir whl
    - cp dist/*.whl whl/
  artifacts:
    name: 'whl'
    when: always
    paths:
      - whl/

push-staging:
  stage: push
  tags:
    - Docker-2
  script:
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi whl/*
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
