{"version":3,"sources":["config.prod.js","pyodide.js","json_parseMore.js","pyodide-worker.js"],"names":["port","xDashConfig","xDashBasicVersion","disableRegistration","disableLocalServer","urlDoc","urlBase","urlBaseForExport","urlWebSite","jsonEditorDatanodes","version","major","minor","dateStamp","fullVersion","chalkitVersion","disableSchedulerLog","disableSchedulerProfiling","pyodide","standard_pyodide_packages","micropip_pyodide_packages","pyodide_index","xdash_lib_url","copyright","xServConfig","urlApi","urlApiFMI","urlxProxy","urlPython","undefined","urlxDashNodeServer","urlAdminApp","dateLastBuild","exportHeaderCss","exportHeaderJs","exportBodyJs","xdashEditorBodyJsList","global","factory","exports","module","define","amd","globalThis","self","loadPyodide","this","window","errorStackParser","stackframe","_capitalize","str","charAt","toUpperCase","substring","_getter","p","booleanProps","numericProps","stringProps","props","concat","StackFrame","obj","i","length","prototype","getArgs","args","setArgs","v","Object","toString","call","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","fileName","getFileName","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","getIsEval","fromString","argsStartIndex","indexOf","argsEndIndex","lastIndexOf","split","locationString","parts","exec","Boolean","j","n","isNaN","parseFloat","isFinite","Number","k","String","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","parse","error","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","Error","extractLocation","urlLike","replace","filter","line","map","sanitizedLine","location","locationParts","source","functionNameRegex","matches","e","message","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","result","len","push","argsRaw","tokens","pop","functionCall","shift","ErrorStackParser","IN_NODE","process","versions","node","browser","nodeUrlMod","nodeFetch","nodePath","nodeVmMod","nodeFsPromisesMod","resolvePath","pathSep","loadBinaryFile","loadScript","path","base","resolve","URL","async","_file_sub_resource_hash","startsWith","slice","includes","response","ok","Uint8Array","arrayBuffer","data","readFile","buffer","byteOffset","byteLength","subResourceHash","url","options","integrity","fetch","document","import","importScripts","runInThisContext","text","pathToFileURL","href","__asyncValues","o","Symbol","asyncIterator","m","s","iterator","next","value","done","__values","verb","Promise","reject","d","then","getFsHandles","handles","collect","curDirHandle","e_1","_a","_c","_b","values","entry","kind","e_1_1","return","dirHandle","Map","set","handle","relativePath","join","default","sep","require","node_modules","fs","crypto","ws","child_process","mod","indexURL","__dirname","err","indexOfLastSlash","endsWith","default_config","fullStdLib","jsglobals","stdin","prompt","homedir","lockFileURL","_node_mounts","packageCacheDir","config","assign","Module","noImageDecoding","noAudioDecoding","noWasmDecoding","preRun","quit","status","toThrow","exited","print","stdout","printErr","stderr","arguments","API","stdLibURL","stdlibURL","stdlibPromise","pymajor","_py_version_major","pyminor","_py_version_minor","FS","mkdirTree","addRunDependency","stdlib","writeFile","catch","console","finally","removeRunDependency","ENV","HOME","chdir","mounts","mount","filesystems","NODEFS","root","MEMFS","PATH","nativeFSAsync","DIR_MODE","FILE_MODE","opts","fileSystemHandle","apply","syncfs","populate","callback","local","getLocalSet","remote","getRemoteSet","src","dst","reconcile","entries","create","isRealDir","toAbsolute","join2","check","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","type","getFile","lastModifiedDate","Date","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","canOwn","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","file","storeRemoteEntry","parentDirHandle","get","dirname","getFileHandle","basename","getDirectoryHandle","writable","createWritable","write","close","removeRemoteEntry","removeEntry","delete","total","keys","forEach","key","e2","getTime","sort","remove","reverse","relPath","normalize","NATIVEFS_ASYNC","initializeFileSystem","moduleLoaded","r","postRun","locateFile","_createPyodideModule","scriptSrc","captured_stderr","rawRun","fatal_loading_error","runPythonInternal_dict","_pyodide","_base","eval_code","importlib","runPythonInternal","import_module","sys","insert","os","globals","builtins","builtins_dict","Proxy","target","symbol","has","Reflect","importhook","_importhook","register_js_finder","callKwargs","hook","defineProperty","toPy","getOwnPropertyNames","name","enumerable","configurable","register_js_module","makePublicAPI","pyodide_py","pyodide_code","pyodide_ffi","package_loader","sitepackages","SITE_PACKAGES","__str__","dsodir","DSO_DIR","defaultLdLibraryPath","environ","__setitem__","finalizeBootstrap","setCdnUrl","packageIndexReady","register_module_not_found_hook","_import_name_to_package_name","repodata_unvendored_stdlibs_and_test","repodata_info","init_loaded_packages","loadPackage","repodata_unvendored_stdlibs","initializeStreams","at","ch","escapee","b","f","t","c","number","string","Infinity","hex","uffff","parseInt","fromCharCode","white","object","hasOwnProperty","array","NaN","word","JSON","parseMore","reviver","walk","holder","log","pyodidePromise","_loadPyodide","msg","micropip","pyimport","install","destroy","_loadPackages","missingStandardPackages","standardPackages","missingMicropipPackages","micropipPackages","_runPythonAsync","runPythonAsync","script","_getPyodideLoadedLibs","standard","loadedPackages","lib","reply","id","postMessage","onmessage","event"],"mappings":"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","file":"pyodide-worker-3.006.9019.js","sourcesContent":["/**\n * file autogenerated by gulp to declare all global var in the application defined in the config.js and the {{prod}}.config.js files \n */\n\n\nvar port = \"7854\" ;\nvar xDashConfig = {\"xDashBasicVersion\":\"true\",\"disableRegistration\":\"false\",\"disableLocalServer\":\"true\",\"urlDoc\":\"https://ifpen.github.io/chalk-it/hosted/doc/\",\"urlBase\":\"https://ifpen.github.io/chalk-it/hosted/\",\"urlBaseForExport\":\"https://ifpen.github.io/chalk-it/hosted/\",\"urlWebSite\":\"https://github.com/ifpen/chalk-it/\",\"jsonEditorDatanodes\":\"false\",\"version\":{\"major\":3,\"minor\":\"006\",\"dateStamp\":9019,\"fullVersion\":\"3.006.9019\",\"chalkitVersion\":\"0.5.6\"},\"disableSchedulerLog\":\"false\",\"disableSchedulerProfiling\":\"false\",\"pyodide\":{\"standard_pyodide_packages\":\"[]\",\"micropip_pyodide_packages\":\"[]\",\"pyodide_index\":\"https://cdn.jsdelivr.net/pyodide/v0.23.4/full/\",\"xdash_lib_url\":\"https://ifpen.github.io/chalk-it/hosted/chalkit_python_api-0.0.5-py3-none-any.whl\"},\"copyright\":\"© 2016-2024 IFP Energies nouvelles\"} ;\nvar xServConfig = {\"urlApi\":null,\"urlApiFMI\":null,\"urlxProxy\":\"https://xproxytest.azurewebsites.net/ProxyService.asmx/\"} ;\nvar urlPython = undefined ;\nvar urlxDashNodeServer = undefined ;\nvar urlAdminApp = undefined ;\nvar dateLastBuild = \"2024-09-09T09:21:38.024Z\" ;\nvar urlBase = \"https://ifpen.github.io/chalk-it/hosted/\" ;\n\nvar exportHeaderCss = [\"assets/all-css-runtime-3.006.9019.min.css\"];\nvar exportHeaderJs = [\"header-all-js-runtime-3.006.9019.min.js\"];\nvar exportBodyJs = [\"body-all-js-runtime-3.006.9019.min.js\"];\nvar xdashEditorBodyJsList = [\"body-all-js-editor-3.006.9019.min.js\"];\n","!function(global,factory){\"object\"==typeof exports&&\"undefined\"!=typeof module?factory(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],factory):factory((global=\"undefined\"!=typeof globalThis?globalThis:global||self).loadPyodide={})}(this,(function(exports){\"use strict\";\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self&&self;var errorStackParser={exports:{}},stackframe={exports:{}};!function(module,exports){module.exports=function(){function _isNumber(n){return!isNaN(parseFloat(n))&&isFinite(n)}function _capitalize(str){return str.charAt(0).toUpperCase()+str.substring(1)}function _getter(p){return function(){return this[p]}}var booleanProps=[\"isConstructor\",\"isEval\",\"isNative\",\"isToplevel\"],numericProps=[\"columnNumber\",\"lineNumber\"],stringProps=[\"fileName\",\"functionName\",\"source\"],arrayProps=[\"args\"],objectProps=[\"evalOrigin\"],props=booleanProps.concat(numericProps,stringProps,arrayProps,objectProps);function StackFrame(obj){if(obj)for(var i=0;i<props.length;i++)void 0!==obj[props[i]]&&this[\"set\"+_capitalize(props[i])](obj[props[i]])}StackFrame.prototype={getArgs:function(){return this.args},setArgs:function(v){if(\"[object Array]\"!==Object.prototype.toString.call(v))throw new TypeError(\"Args must be an Array\");this.args=v},getEvalOrigin:function(){return this.evalOrigin},setEvalOrigin:function(v){if(v instanceof StackFrame)this.evalOrigin=v;else{if(!(v instanceof Object))throw new TypeError(\"Eval Origin must be an Object or StackFrame\");this.evalOrigin=new StackFrame(v)}},toString:function(){var fileName=this.getFileName()||\"\",lineNumber=this.getLineNumber()||\"\",columnNumber=this.getColumnNumber()||\"\",functionName=this.getFunctionName()||\"\";return this.getIsEval()?fileName?\"[eval] (\"+fileName+\":\"+lineNumber+\":\"+columnNumber+\")\":\"[eval]:\"+lineNumber+\":\"+columnNumber:functionName?functionName+\" (\"+fileName+\":\"+lineNumber+\":\"+columnNumber+\")\":fileName+\":\"+lineNumber+\":\"+columnNumber}},StackFrame.fromString=function(str){var argsStartIndex=str.indexOf(\"(\"),argsEndIndex=str.lastIndexOf(\")\"),functionName=str.substring(0,argsStartIndex),args=str.substring(argsStartIndex+1,argsEndIndex).split(\",\"),locationString=str.substring(argsEndIndex+1);if(0===locationString.indexOf(\"@\"))var parts=/@(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(locationString,\"\"),fileName=parts[1],lineNumber=parts[2],columnNumber=parts[3];return new StackFrame({functionName:functionName,args:args||void 0,fileName:fileName,lineNumber:lineNumber||void 0,columnNumber:columnNumber||void 0})};for(var i=0;i<booleanProps.length;i++)StackFrame.prototype[\"get\"+_capitalize(booleanProps[i])]=_getter(booleanProps[i]),StackFrame.prototype[\"set\"+_capitalize(booleanProps[i])]=function(p){return function(v){this[p]=Boolean(v)}}(booleanProps[i]);for(var j=0;j<numericProps.length;j++)StackFrame.prototype[\"get\"+_capitalize(numericProps[j])]=_getter(numericProps[j]),StackFrame.prototype[\"set\"+_capitalize(numericProps[j])]=function(p){return function(v){if(!_isNumber(v))throw new TypeError(p+\" must be a Number\");this[p]=Number(v)}}(numericProps[j]);for(var k=0;k<stringProps.length;k++)StackFrame.prototype[\"get\"+_capitalize(stringProps[k])]=_getter(stringProps[k]),StackFrame.prototype[\"set\"+_capitalize(stringProps[k])]=function(p){return function(v){this[p]=String(v)}}(stringProps[k]);return StackFrame}()}(stackframe),function(module,exports){var StackFrame,FIREFOX_SAFARI_STACK_REGEXP,CHROME_IE_STACK_REGEXP,SAFARI_NATIVE_CODE_REGEXP;module.exports=(StackFrame=stackframe.exports,FIREFOX_SAFARI_STACK_REGEXP=/(^|@)\\S+:\\d+/,CHROME_IE_STACK_REGEXP=/^\\s*at .*(\\S+:\\d+|\\(native\\))/m,SAFARI_NATIVE_CODE_REGEXP=/^(eval@)?(\\[native code])?$/,{parse:function(error){if(void 0!==error.stacktrace||void 0!==error[\"opera#sourceloc\"])return this.parseOpera(error);if(error.stack&&error.stack.match(CHROME_IE_STACK_REGEXP))return this.parseV8OrIE(error);if(error.stack)return this.parseFFOrSafari(error);throw new Error(\"Cannot parse given Error object\")},extractLocation:function(urlLike){if(-1===urlLike.indexOf(\":\"))return[urlLike];var parts=/(.+?)(?::(\\d+))?(?::(\\d+))?$/.exec(urlLike.replace(/[()]/g,\"\"));return[parts[1],parts[2]||void 0,parts[3]||void 0]},parseV8OrIE:function(error){return error.stack.split(\"\\n\").filter((function(line){return!!line.match(CHROME_IE_STACK_REGEXP)}),this).map((function(line){line.indexOf(\"(eval \")>-1&&(line=line.replace(/eval code/g,\"eval\").replace(/(\\(eval at [^()]*)|(,.*$)/g,\"\"));var sanitizedLine=line.replace(/^\\s+/,\"\").replace(/\\(eval code/g,\"(\").replace(/^.*?\\s+/,\"\"),location=sanitizedLine.match(/ (\\(.+\\)$)/);sanitizedLine=location?sanitizedLine.replace(location[0],\"\"):sanitizedLine;var locationParts=this.extractLocation(location?location[1]:sanitizedLine),functionName=location&&sanitizedLine||void 0,fileName=[\"eval\",\"<anonymous>\"].indexOf(locationParts[0])>-1?void 0:locationParts[0];return new StackFrame({functionName:functionName,fileName:fileName,lineNumber:locationParts[1],columnNumber:locationParts[2],source:line})}),this)},parseFFOrSafari:function(error){return error.stack.split(\"\\n\").filter((function(line){return!line.match(SAFARI_NATIVE_CODE_REGEXP)}),this).map((function(line){if(line.indexOf(\" > eval\")>-1&&(line=line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g,\":$1\")),-1===line.indexOf(\"@\")&&-1===line.indexOf(\":\"))return new StackFrame({functionName:line});var functionNameRegex=/((.*\".+\"[^@]*)?[^@]*)(?:@)/,matches=line.match(functionNameRegex),functionName=matches&&matches[1]?matches[1]:void 0,locationParts=this.extractLocation(line.replace(functionNameRegex,\"\"));return new StackFrame({functionName:functionName,fileName:locationParts[0],lineNumber:locationParts[1],columnNumber:locationParts[2],source:line})}),this)},parseOpera:function(e){return!e.stacktrace||e.message.indexOf(\"\\n\")>-1&&e.message.split(\"\\n\").length>e.stacktrace.split(\"\\n\").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(e){for(var lineRE=/Line (\\d+).*script (?:in )?(\\S+)/i,lines=e.message.split(\"\\n\"),result=[],i=2,len=lines.length;i<len;i+=2){var match=lineRE.exec(lines[i]);match&&result.push(new StackFrame({fileName:match[2],lineNumber:match[1],source:lines[i]}))}return result},parseOpera10:function(e){for(var lineRE=/Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i,lines=e.stacktrace.split(\"\\n\"),result=[],i=0,len=lines.length;i<len;i+=2){var match=lineRE.exec(lines[i]);match&&result.push(new StackFrame({functionName:match[3]||void 0,fileName:match[2],lineNumber:match[1],source:lines[i]}))}return result},parseOpera11:function(error){return error.stack.split(\"\\n\").filter((function(line){return!!line.match(FIREFOX_SAFARI_STACK_REGEXP)&&!line.match(/^Error created at/)}),this).map((function(line){var argsRaw,tokens=line.split(\"@\"),locationParts=this.extractLocation(tokens.pop()),functionCall=tokens.shift()||\"\",functionName=functionCall.replace(/<anonymous function(: (\\w+))?>/,\"$2\").replace(/\\([^)]*\\)/g,\"\")||void 0;functionCall.match(/\\(([^)]*)\\)/)&&(argsRaw=functionCall.replace(/^[^(]+\\(([^)]*)\\)$/,\"$1\"));var args=void 0===argsRaw||\"[arguments not available]\"===argsRaw?void 0:argsRaw.split(\",\");return new StackFrame({functionName:functionName,args:args,fileName:locationParts[0],lineNumber:locationParts[1],columnNumber:locationParts[2],source:line})}),this)}})}(errorStackParser);var ErrorStackParser=errorStackParser.exports;const IN_NODE=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node&&void 0===process.browser;let nodeUrlMod,nodeFetch,nodePath,nodeVmMod,nodeFsPromisesMod,resolvePath,pathSep,loadBinaryFile,loadScript;if(resolvePath=IN_NODE?function(path,base){return nodePath.resolve(base||\".\",path)}:function(path,base){return void 0===base&&(base=location),new URL(path,base).toString()},IN_NODE||(pathSep=\"/\"),loadBinaryFile=IN_NODE?async function(path,_file_sub_resource_hash){if(path.startsWith(\"file://\")&&(path=path.slice(\"file://\".length)),path.includes(\"://\")){let response=await nodeFetch(path);if(!response.ok)throw new Error(`Failed to load '${path}': request failed.`);return new Uint8Array(await response.arrayBuffer())}{const data=await nodeFsPromisesMod.readFile(path);return new Uint8Array(data.buffer,data.byteOffset,data.byteLength)}}:async function(path,subResourceHash){const url=new URL(path,location);let options=subResourceHash?{integrity:subResourceHash}:{},response=await fetch(url,options);if(!response.ok)throw new Error(`Failed to load '${url}': request failed.`);return new Uint8Array(await response.arrayBuffer())},globalThis.document)loadScript=async url=>await import(/* webpackIgnore: true */url);else if(globalThis.importScripts)loadScript=async url=>{try{globalThis.importScripts(url)}catch(e){if(!(e instanceof TypeError))throw e;await import(/* webpackIgnore: true */url)}};else{if(!IN_NODE)throw new Error(\"Cannot determine runtime environment\");loadScript=async function(url){url.startsWith(\"file://\")&&(url=url.slice(\"file://\".length));url.includes(\"://\")?nodeVmMod.runInThisContext(await(await nodeFetch(url)).text()):await import(/* webpackIgnore: true */nodeUrlMod.pathToFileURL(url).href)}}function __values(o){var s=\"function\"==typeof Symbol&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&\"number\"==typeof o.length)return{next:function(){return o&&i>=o.length&&(o=void 0),{value:o&&o[i++],done:!o}}};throw new TypeError(s?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var i,m=o[Symbol.asyncIterator];return m?m.call(o):(o=__values(o),i={},verb(\"next\"),verb(\"throw\"),verb(\"return\"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){(function(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)})(resolve,reject,(v=o[n](v)).done,v.value)}))}}}const getFsHandles=async dirHandle=>{const handles=[];await async function collect(curDirHandle){var e_1,_a;try{for(var _c,_b=__asyncValues(curDirHandle.values());!(_c=await _b.next()).done;){const entry=_c.value;handles.push(entry),\"directory\"===entry.kind&&await collect(entry)}}catch(e_1_1){e_1={error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&await _a.call(_b)}finally{if(e_1)throw e_1.error}}}(dirHandle);const result=new Map;result.set(\".\",dirHandle);for(const handle of handles){const relativePath=(await dirHandle.resolve(handle)).join(\"/\");result.set(relativePath,handle)}return result};function initializeFileSystem(Module,config){let stdLibURL;stdLibURL=null!=config.stdLibURL?config.stdLibURL:config.indexURL+\"python_stdlib.zip\",function(Module,stdlibURL){const stdlibPromise=loadBinaryFile(stdlibURL);Module.preRun.push((()=>{const pymajor=Module._py_version_major(),pyminor=Module._py_version_minor();Module.FS.mkdirTree(\"/lib\"),Module.FS.mkdirTree(`/lib/python${pymajor}.${pyminor}/site-packages`),Module.addRunDependency(\"install-stdlib\"),stdlibPromise.then((stdlib=>{Module.FS.writeFile(`/lib/python${pymajor}${pyminor}.zip`,stdlib)})).catch((e=>{console.error(\"Error occurred while installing the standard library:\"),console.error(e)})).finally((()=>{Module.removeRunDependency(\"install-stdlib\")}))}))}(Module,stdLibURL),function(Module,path){Module.preRun.push((function(){try{Module.FS.mkdirTree(path)}catch(e){console.error(`Error occurred while making a home directory '${path}':`),console.error(e),console.error(\"Using '/' for a home directory instead\"),path=\"/\"}Module.ENV.HOME=path,Module.FS.chdir(path)}))}(Module,config.homedir),function(Module,mounts){Module.preRun.push((()=>{for(const mount of mounts)Module.FS.mkdirTree(mount),Module.FS.mount(Module.FS.filesystems.NODEFS,{root:mount},mount)}))}(Module,config._node_mounts),Module.preRun.push((()=>function(module){const FS=module.FS,MEMFS=module.FS.filesystems.MEMFS,PATH=module.PATH,nativeFSAsync={DIR_MODE:16895,FILE_MODE:33279,mount:function(mount){if(!mount.opts.fileSystemHandle)throw new Error(\"opts.fileSystemHandle is required\");return MEMFS.mount.apply(null,arguments)},syncfs:async(mount,populate,callback)=>{try{const local=nativeFSAsync.getLocalSet(mount),remote=await nativeFSAsync.getRemoteSet(mount),src=populate?remote:local,dst=populate?local:remote;await nativeFSAsync.reconcile(mount,src,dst),callback(null)}catch(e){callback(e)}},getLocalSet:mount=>{let entries=Object.create(null);function isRealDir(p){return\".\"!==p&&\"..\"!==p}function toAbsolute(root){return p=>PATH.join2(root,p)}let check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));for(;check.length;){let path=check.pop(),stat=FS.stat(path);FS.isDir(stat.mode)&&check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path))),entries[path]={timestamp:stat.mtime,mode:stat.mode}}return{type:\"local\",entries:entries}},getRemoteSet:async mount=>{const entries=Object.create(null),handles=await getFsHandles(mount.opts.fileSystemHandle);for(const[path,handle]of handles)\".\"!==path&&(entries[PATH.join2(mount.mountpoint,path)]={timestamp:\"file\"===handle.kind?(await handle.getFile()).lastModifiedDate:new Date,mode:\"file\"===handle.kind?nativeFSAsync.FILE_MODE:nativeFSAsync.DIR_MODE});return{type:\"remote\",entries:entries,handles:handles}},loadLocalEntry:path=>{const node=FS.lookupPath(path).node,stat=FS.stat(path);if(FS.isDir(stat.mode))return{timestamp:stat.mtime,mode:stat.mode};if(FS.isFile(stat.mode))return node.contents=MEMFS.getFileDataAsTypedArray(node),{timestamp:stat.mtime,mode:stat.mode,contents:node.contents};throw new Error(\"node type not supported\")},storeLocalEntry:(path,entry)=>{if(FS.isDir(entry.mode))FS.mkdirTree(path,entry.mode);else{if(!FS.isFile(entry.mode))throw new Error(\"node type not supported\");FS.writeFile(path,entry.contents,{canOwn:!0})}FS.chmod(path,entry.mode),FS.utime(path,entry.timestamp,entry.timestamp)},removeLocalEntry:path=>{var stat=FS.stat(path);FS.isDir(stat.mode)?FS.rmdir(path):FS.isFile(stat.mode)&&FS.unlink(path)},loadRemoteEntry:async handle=>{if(\"file\"===handle.kind){const file=await handle.getFile();return{contents:new Uint8Array(await file.arrayBuffer()),mode:nativeFSAsync.FILE_MODE,timestamp:file.lastModifiedDate}}if(\"directory\"===handle.kind)return{mode:nativeFSAsync.DIR_MODE,timestamp:new Date};throw new Error(\"unknown kind: \"+handle.kind)},storeRemoteEntry:async(handles,path,entry)=>{const parentDirHandle=handles.get(PATH.dirname(path)),handle=FS.isFile(entry.mode)?await parentDirHandle.getFileHandle(PATH.basename(path),{create:!0}):await parentDirHandle.getDirectoryHandle(PATH.basename(path),{create:!0});if(\"file\"===handle.kind){const writable=await handle.createWritable();await writable.write(entry.contents),await writable.close()}handles.set(path,handle)},removeRemoteEntry:async(handles,path)=>{const parentDirHandle=handles.get(PATH.dirname(path));await parentDirHandle.removeEntry(PATH.basename(path)),handles.delete(path)},reconcile:async(mount,src,dst)=>{let total=0;const create=[];Object.keys(src.entries).forEach((function(key){const e=src.entries[key],e2=dst.entries[key];(!e2||FS.isFile(e.mode)&&e.timestamp.getTime()>e2.timestamp.getTime())&&(create.push(key),total++)})),create.sort();const remove=[];if(Object.keys(dst.entries).forEach((function(key){src.entries[key]||(remove.push(key),total++)})),remove.sort().reverse(),!total)return;const handles=\"remote\"===src.type?src.handles:dst.handles;for(const path of create){const relPath=PATH.normalize(path.replace(mount.mountpoint,\"/\")).substring(1);if(\"local\"===dst.type){const handle=handles.get(relPath),entry=await nativeFSAsync.loadRemoteEntry(handle);nativeFSAsync.storeLocalEntry(path,entry)}else{const entry=nativeFSAsync.loadLocalEntry(path);await nativeFSAsync.storeRemoteEntry(handles,relPath,entry)}}for(const path of remove)if(\"local\"===dst.type)nativeFSAsync.removeLocalEntry(path);else{const relPath=PATH.normalize(path.replace(mount.mountpoint,\"/\")).substring(1);await nativeFSAsync.removeRemoteEntry(handles,relPath)}}};module.FS.filesystems.NATIVEFS_ASYNC=nativeFSAsync}(Module)))}function finalizeBootstrap(API,config){API.runPythonInternal_dict=API._pyodide._base.eval_code(\"{}\"),API.importlib=API.runPythonInternal(\"import importlib; importlib\");let import_module=API.importlib.import_module;API.sys=import_module(\"sys\"),API.sys.path.insert(0,config.homedir),API.os=import_module(\"os\");let globals=API.runPythonInternal(\"import __main__; __main__.__dict__\"),builtins=API.runPythonInternal(\"import builtins; builtins.__dict__\");var builtins_dict;API.globals=(builtins_dict=builtins,new Proxy(globals,{get:(target,symbol)=>\"get\"===symbol?key=>{let result=target.get(key);return void 0===result&&(result=builtins_dict.get(key)),result}:\"has\"===symbol?key=>target.has(key)||builtins_dict.has(key):Reflect.get(target,symbol)}));let importhook=API._pyodide._importhook;importhook.register_js_finder.callKwargs({hook:function(o){\"__all__\"in o||Object.defineProperty(o,\"__all__\",{get:()=>pyodide.toPy(Object.getOwnPropertyNames(o).filter((name=>\"__all__\"!==name))),enumerable:!1,configurable:!0})}}),importhook.register_js_module(\"js\",config.jsglobals);let pyodide=API.makePublicAPI();return importhook.register_js_module(\"pyodide_js\",pyodide),API.pyodide_py=import_module(\"pyodide\"),API.pyodide_code=import_module(\"pyodide.code\"),API.pyodide_ffi=import_module(\"pyodide.ffi\"),API.package_loader=import_module(\"pyodide._package_loader\"),API.sitepackages=API.package_loader.SITE_PACKAGES.__str__(),API.dsodir=API.package_loader.DSO_DIR.__str__(),API.defaultLdLibraryPath=[API.dsodir,API.sitepackages],API.os.environ.__setitem__(\"LD_LIBRARY_PATH\",API.defaultLdLibraryPath.join(\":\")),pyodide.pyodide_py=API.pyodide_py,pyodide.globals=API.globals,pyodide}async function loadPyodide(options={}){await async function(){if(!IN_NODE)return;if(nodeUrlMod=(await import(\"url\")).default,nodeFsPromisesMod=await import(\"fs/promises\"),nodeFetch=globalThis.fetch?fetch:(await import(\"node-fetch\")).default,nodeVmMod=(await import(\"vm\")).default,nodePath=await import(\"path\"),pathSep=nodePath.sep,\"undefined\"!=typeof require)return;const node_modules={fs:await import(\"fs\"),crypto:await import(\"crypto\"),ws:await import(\"ws\"),child_process:await import(\"child_process\")};globalThis.require=function(mod){return node_modules[mod]}}();let indexURL=options.indexURL||function(){if(\"string\"==typeof __dirname)return __dirname;let err;try{throw new Error}catch(e){err=e}let fileName=ErrorStackParser.parse(err)[0].fileName;const indexOfLastSlash=fileName.lastIndexOf(pathSep);if(-1===indexOfLastSlash)throw new Error(\"Could not extract indexURL path from pyodide module location\");return fileName.slice(0,indexOfLastSlash)}();indexURL=resolvePath(indexURL),indexURL.endsWith(\"/\")||(indexURL+=\"/\"),options.indexURL=indexURL;const default_config={fullStdLib:!1,jsglobals:globalThis,stdin:globalThis.prompt?globalThis.prompt:void 0,homedir:\"/home/pyodide\",lockFileURL:indexURL+\"repodata.json\",args:[],_node_mounts:[],packageCacheDir:indexURL},config=Object.assign(default_config,options),Module=function(){let Module={noImageDecoding:!0,noAudioDecoding:!0,noWasmDecoding:!1,preRun:[],quit:(status,toThrow)=>{throw Module.exited={status:status,toThrow:toThrow},toThrow}};return Module}();Module.print=config.stdout,Module.printErr=config.stderr,Module.arguments=config.args;const API={config:config};Module.API=API,initializeFileSystem(Module,config);const moduleLoaded=new Promise((r=>Module.postRun=r));if(Module.locateFile=path=>config.indexURL+path,\"function\"!=typeof _createPyodideModule){const scriptSrc=`${config.indexURL}pyodide.asm.js`;await loadScript(scriptSrc)}if(await _createPyodideModule(Module),await moduleLoaded,Module.exited)throw Module.exited.toThrow;if(\"0.23.4\"!==API.version)throw new Error(`Pyodide version does not match: '0.23.4' <==> '${API.version}'. If you updated the Pyodide version, make sure you also updated the 'indexURL' parameter passed to loadPyodide.`);Module.locateFile=path=>{throw new Error(\"Didn't expect to load any more file_packager files!\")};let[err,captured_stderr]=API.rawRun(\"import _pyodide_core\");err&&Module.API.fatal_loading_error(\"Failed to import _pyodide_core\\n\",captured_stderr);const pyodide=finalizeBootstrap(API,config);if(pyodide.version.includes(\"dev\")||API.setCdnUrl(`https://cdn.jsdelivr.net/pyodide/v${pyodide.version}/full/`),await API.packageIndexReady,API._pyodide._importhook.register_module_not_found_hook(API._import_name_to_package_name,API.repodata_unvendored_stdlibs_and_test),\"0.23.4\"!==API.repodata_info.version)throw new Error(\"Lock file version doesn't match Pyodide version\");return API.package_loader.init_loaded_packages(),config.fullStdLib&&await pyodide.loadPackage(API.repodata_unvendored_stdlibs),API.initializeStreams(config.stdin,config.stdout,config.stderr),pyodide}globalThis.loadPyodide=loadPyodide,exports.loadPyodide=loadPyodide,exports.version=\"0.23.4\",Object.defineProperty(exports,\"__esModule\",{value:!0})}));\r\n//# sourceMappingURL=pyodide.js.map","// Adapted from Crockford's JSON.parse (see https://github.com/douglascrockford/JSON-js)\r\n// This version adds support for NaN, -Infinity and Infinity.\r\n\r\n(function(){\r\n\tvar at,\t // The index of the current character\r\n\t\tch,\t // The current character\r\n\t\tescapee = {\r\n\t\t\t'\"':  '\"',\r\n\t\t\t'\\\\': '\\\\',\r\n\t\t\t'/':  '/',\r\n\t\t\tb:\t'\\b',\r\n\t\t\tf:\t'\\f',\r\n\t\t\tn:\t'\\n',\r\n\t\t\tr:\t'\\r',\r\n\t\t\tt:\t'\\t'\r\n\t\t},\r\n\t\ttext,\r\n\t\terror = function (m) {\r\n\t\t\tthrow {\r\n\t\t\t\tname: 'SyntaxError',\r\n\t\t\t\tmessage: m,\r\n\t\t\t\tat:\tat,\r\n\t\t\t\ttext: text\r\n\t\t\t};\r\n\t\t},\r\n\t\tnext = function (c) {\r\n\t\t\treturn ch = text.charAt(at++);\r\n\t\t},\r\n\t\tcheck = function (c) {\r\n\t\t\tif (c !== ch) {\r\n\t\t\t\terror(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\r\n\t\t\t}\r\n\t\t\tch = text.charAt(at++);\r\n\t\t},\r\n\t\tnumber = function () {\r\n\t\t\tvar string = '';\r\n\t\t\tif (ch === '-') {\r\n\t\t\t\tstring = '-';\r\n\t\t\t\tcheck('-');\r\n\t\t\t}\r\n\t\t\tif (ch === 'I') {\r\n\t\t\t\tcheck('I');\r\n\t\t\t\tcheck('n');\r\n\t\t\t\tcheck('f');\r\n\t\t\t\tcheck('i');\r\n\t\t\t\tcheck('n');\r\n\t\t\t\tcheck('i');\r\n\t\t\t\tcheck('t');\r\n\t\t\t\tcheck('y');\r\n\t\t\t\treturn -Infinity;\r\n\t\t\t}\r\n\t\t\twhile (ch >= '0' && ch <= '9') {\r\n\t\t\t\tstring += ch;\r\n\t\t\t\tnext();\r\n\t\t\t}\r\n\t\t\tif (ch === '.') {\r\n\t\t\t\tstring += '.';\r\n\t\t\t\twhile (next() && ch >= '0' && ch <= '9') {\r\n\t\t\t\t\tstring += ch;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (ch === 'e' || ch === 'E') {\r\n\t\t\t\tstring += ch;\r\n\t\t\t\tnext();\r\n\t\t\t\tif (ch === '-' || ch === '+') {\r\n\t\t\t\t\tstring += ch;\r\n\t\t\t\t\tnext();\r\n\t\t\t\t}\r\n\t\t\t\twhile (ch >= '0' && ch <= '9') {\r\n\t\t\t\t\tstring += ch;\r\n\t\t\t\t\tnext();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn +string;\r\n\t\t},\r\n\t\tstring = function () {\r\n\t\t\tvar hex,\r\n\t\t\t\ti,\r\n\t\t\t\tstring = '',\r\n\t\t\t\tuffff;\r\n\t\t\tif (ch === '\"') {\r\n\t\t\t\twhile (next()) {\r\n\t\t\t\t\tif (ch === '\"') {\r\n\t\t\t\t\t\tnext();\r\n\t\t\t\t\t\treturn string;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (ch === '\\\\') {\r\n\t\t\t\t\t\tnext();\r\n\t\t\t\t\t\tif (ch === 'u') {\r\n\t\t\t\t\t\t\tuffff = 0;\r\n\t\t\t\t\t\t\tfor (i = 0; i < 4; i ++) {\r\n\t\t\t\t\t\t\t\thex = parseInt(next(), 16);\r\n\t\t\t\t\t\t\t\tif (!isFinite(hex)) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tuffff = uffff * 16 + hex;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstring += String.fromCharCode(uffff);\r\n\t\t\t\t\t\t} else if (escapee[ch]) {\r\n\t\t\t\t\t\t\tstring += escapee[ch];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstring += ch;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\terror(\"Bad string\");\r\n\t\t},\r\n\t\twhite = function () { // Skip whitespace.\r\n\t\t\twhile (ch && ch <= ' ') {\r\n\t\t\t\tnext();\r\n\t\t\t}\r\n\t\t},\r\n\t\tword = function () {\r\n\t\t\tswitch (ch) {\r\n\t\t\tcase 't':\r\n\t\t\t\tcheck('t');\r\n\t\t\t\tcheck('r');\r\n\t\t\t\tcheck('u');\r\n\t\t\t\tcheck('e');\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'f':\r\n\t\t\t\tcheck('f');\r\n\t\t\t\tcheck('a');\r\n\t\t\t\tcheck('l');\r\n\t\t\t\tcheck('s');\r\n\t\t\t\tcheck('e');\r\n\t\t\t\treturn false;\r\n\t\t\tcase 'n':\r\n\t\t\t\tcheck('n');\r\n\t\t\t\tcheck('u');\r\n\t\t\t\tcheck('l');\r\n\t\t\t\tcheck('l');\r\n\t\t\t\treturn null;\r\n\t\t\tcase 'N':\r\n\t\t\t\tcheck('N');\r\n\t\t\t\tcheck('a');\r\n\t\t\t\tcheck('N');\r\n\t\t\t\treturn NaN;\r\n\t\t\tcase 'I':\r\n\t\t\t\tcheck('I');\r\n\t\t\t\tcheck('n');\r\n\t\t\t\tcheck('f');\r\n\t\t\t\tcheck('i');\r\n\t\t\t\tcheck('n');\r\n\t\t\t\tcheck('i');\r\n\t\t\t\tcheck('t');\r\n\t\t\t\tcheck('y');\r\n\t\t\t\treturn Infinity;\r\n\t\t\t}\r\n\t\t\terror(\"Unexpected '\" + ch + \"'\");\r\n\t\t},\r\n\t\tarray = function () {\r\n\t\t\tvar array = [];\r\n\t\t\tif (ch === '[') {\r\n\t\t\t\tcheck('[');\r\n\t\t\t\twhite();\r\n\t\t\t\tif (ch === ']') {\r\n\t\t\t\t\tcheck(']');\r\n\t\t\t\t\treturn array;   // empty array\r\n\t\t\t\t}\r\n\t\t\t\twhile (ch) {\r\n\t\t\t\t\tarray.push(value());\r\n\t\t\t\t\twhite();\r\n\t\t\t\t\tif (ch === ']') {\r\n\t\t\t\t\t\tcheck(']');\r\n\t\t\t\t\t\treturn array;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck(',');\r\n\t\t\t\t\twhite();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\terror(\"Bad array\");\r\n\t\t},\r\n\t\tobject = function () {\r\n\t\t\tvar key, object = {};\r\n\t\t\tif (ch === '{') {\r\n\t\t\t\tcheck('{');\r\n\t\t\t\twhite();\r\n\t\t\t\tif (ch === '}') {\r\n\t\t\t\t\tcheck('}');\r\n\t\t\t\t\treturn object;   // empty object\r\n\t\t\t\t}\r\n\t\t\t\twhile (ch) {\r\n\t\t\t\t\tkey = string();\r\n\t\t\t\t\twhite();\r\n\t\t\t\t\tcheck(':');\r\n\t\t\t\t\tif (Object.hasOwnProperty.call(object, key)) {\r\n\t\t\t\t\t\terror('Duplicate key \"' + key + '\"');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tobject[key] = value();\r\n\t\t\t\t\twhite();\r\n\t\t\t\t\tif (ch === '}') {\r\n\t\t\t\t\t\tcheck('}');\r\n\t\t\t\t\t\treturn object;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck(',');\r\n\t\t\t\t\twhite();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\terror(\"Bad object\");\r\n\t\t};\r\n\tvar value = function () {\r\n\t\twhite();\r\n\t\tswitch (ch) {\r\n\t\tcase '{':\r\n\t\t\treturn object();\r\n\t\tcase '[':\r\n\t\t\treturn array();\r\n\t\tcase '\"':\r\n\t\t\treturn string();\r\n\t\tcase '-':\r\n\t\t\treturn number();\r\n\t\tdefault:\r\n\t\t\treturn ch >= '0' && ch <= '9' ? number() : word();\r\n\t\t}\r\n\t};\r\n\t\r\n\tJSON.parseMore = function(source, reviver){\r\n\t\tvar result;\r\n\t\ttext = source;\r\n\t\tat = 0;\r\n\t\tch = ' ';\r\n\t\tresult = value();\r\n\t\twhite();\r\n\t\tif (ch) {\r\n\t\t\terror(\"Syntax error\");\r\n\t\t}\t\r\n\t\treturn typeof reviver === 'function'\r\n\t\t? (function walk(holder, key) {\r\n\t\t\tvar k, v, value = holder[key];\r\n\t\t\tif (value && typeof value === 'object') {\r\n\t\t\t\tfor (k in value) {\r\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(value, k)) {\r\n\t\t\t\t\t\tv = walk(value, k);\r\n\t\t\t\t\t\tif (v !== undefined) {\r\n\t\t\t\t\t\t\tvalue[k] = v;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdelete value[k];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn reviver.call(holder, key, value);\r\n\t\t}({'': result}, ''))\r\n\t\t: result;\r\n\t}\r\n\t\r\n})();\r\n","'use strict';\r\n\r\nconsole.log('Pyodide worker started');\r\n\r\nlet pyodidePromise = null;\r\n\r\nasync function _loadPyodide(msg) {\r\n  const pyodide = await loadPyodide({ indexURL: xDashConfig['pyodide'].pyodide_index });\r\n\r\n  await pyodide.loadPackage('micropip');\r\n  const micropip = pyodide.pyimport('micropip');\r\n  try {\r\n    await micropip.install(xDashConfig['pyodide'].xdash_lib_url);\r\n  } finally {\r\n    micropip.destroy();\r\n  }\r\n\r\n  return pyodide;\r\n}\r\n\r\nasync function _loadPackages(msg) {\r\n  const missingStandardPackages = msg.standardPackages;\r\n  const missingMicropipPackages = msg.micropipPackages;\r\n\r\n  if (missingStandardPackages.length) {\r\n    const pyodide = await pyodidePromise;\r\n    await pyodide.loadPackage(missingStandardPackages);\r\n  }\r\n  if (missingMicropipPackages.length) {\r\n    const pyodide = await pyodidePromise;\r\n    const micropip = pyodide.pyimport('micropip');\r\n    try {\r\n      await micropip.install(missingMicropipPackages);\r\n    } finally {\r\n      micropip.destroy();\r\n    }\r\n  }\r\n}\r\n\r\nasync function _runPythonAsync(msg) {\r\n  const pyodide = await pyodidePromise;\r\n  let globals = undefined;\r\n  if (msg.globals) {\r\n    // TODO check whether JSON <-> is faster\r\n    globals = pyodide.toPy(msg.globals);\r\n  }\r\n  try {\r\n    return await pyodide.runPythonAsync(msg.script, globals ? { globals } : undefined);\r\n  } finally {\r\n    if (globals) {\r\n      globals.destroy();\r\n    }\r\n  }\r\n}\r\n\r\nasync function _getPyodideLoadedLibs() {\r\n  // TODO use\r\n  const pyodide = await pyodidePromise;\r\n\r\n  const standard = [];\r\n  const micropip = [];\r\n  Object.entries(pyodide.loadedPackages).forEach(([lib, type]) => {\r\n    if (type === 'default channel') {\r\n      standard.push(lib);\r\n    } else if (type === 'pypi') {\r\n      micropip.push(lib);\r\n    }\r\n  });\r\n\r\n  return { standard, micropip };\r\n}\r\n\r\nfunction reply(id, msg) {\r\n  self.postMessage({ ...msg, id });\r\n}\r\n\r\nself.onmessage = async (event) => {\r\n  const { id, type, ...msg } = event.data;\r\n\r\n  try {\r\n    if (type === 'start') {\r\n      pyodidePromise = await _loadPyodide(msg);\r\n      self.postMessage({ result: 'ok', id });\r\n    } else if (type === 'loadPackages') {\r\n      await _loadPackages(msg);\r\n      self.postMessage({ result: 'ok', id });\r\n    } else if (type === 'run') {\r\n      const result = JSON.parseMore(await _runPythonAsync(msg));\r\n      self.postMessage({ ...result, id });\r\n    } else {\r\n      const error = `Invalid message type: ${type}`;\r\n      console.error(error);\r\n      self.postMessage({ error, id });\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    self.postMessage({ error: error.message, id });\r\n  }\r\n};\r\n"]}